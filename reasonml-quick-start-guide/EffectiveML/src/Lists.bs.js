// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function sum(list) {
  if (list) {
    return list[0] + sum(list[1]) | 0;
  } else {
    return 0;
  }
}

console.log(sum(/* :: */[
          1,
          /* :: */[
            2,
            /* :: */[
              3,
              /* [] */0
            ]
          ]
        ]));

function reverse(list) {
  if (list) {
    return Pervasives.$at(reverse(list[1]), /* :: */[
                list[0],
                /* [] */0
              ]);
  } else {
    return /* [] */0;
  }
}

console.log(reverse(/* :: */[
          "first",
          /* :: */[
            "second",
            /* :: */[
              "third",
              /* [] */0
            ]
          ]
        ]));

function reverse$1(list) {
  var _list = list;
  var _acc = /* [] */0;
  while(true) {
    var acc = _acc;
    var list$1 = _list;
    if (list$1) {
      _acc = /* :: */[
        list$1[0],
        acc
      ];
      _list = list$1[1];
      continue ;
    } else {
      return acc;
    }
  };
}

console.log(/* :: */[
      "prepended",
      /* :: */[
        "first",
        /* :: */[
          "second",
          /* :: */[
            "third",
            /* [] */0
          ]
        ]
      ]
    ]);

Belt_List.reduce(Belt_List.map(/* :: */[
          1,
          /* :: */[
            2,
            /* :: */[
              3,
              /* [] */0
            ]
          ]
        ], (function (e) {
            return e + 1 | 0;
          })), 0, (function (prim, prim$1) {
        return prim + prim$1 | 0;
      }));

Belt_List.reduce(Belt_List.map(/* :: */[
          1,
          /* :: */[
            2,
            /* :: */[
              3,
              /* [] */0
            ]
          ]
        ], (function (e) {
            return e + 1 | 0;
          })), 0, (function (prim, prim$1) {
        return prim + prim$1 | 0;
      }));

var list = /* () */0;

exports.sum = sum;
exports.reverse = reverse$1;
exports.list = list;
/*  Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function sum(list) {
  if (list) {
    return list.hd + sum(list.tl) | 0;
  } else {
    return 0;
  }
}

console.log(sum({
          hd: 1,
          tl: {
            hd: 2,
            tl: {
              hd: 3,
              tl: /* [] */0
            }
          }
        }));

function reverse(list) {
  if (list) {
    return Pervasives.$at(reverse(list.tl), {
                hd: list.hd,
                tl: /* [] */0
              });
  } else {
    return /* [] */0;
  }
}

console.log(reverse({
          hd: "first",
          tl: {
            hd: "second",
            tl: {
              hd: "third",
              tl: /* [] */0
            }
          }
        }));

function reverse$1(list) {
  var _list = list;
  var _acc = /* [] */0;
  while(true) {
    var acc = _acc;
    var list$1 = _list;
    if (!list$1) {
      return acc;
    }
    _acc = {
      hd: list$1.hd,
      tl: acc
    };
    _list = list$1.tl;
    continue ;
  };
}

console.log({
      hd: "prepended",
      tl: {
        hd: "first",
        tl: {
          hd: "second",
          tl: {
            hd: "third",
            tl: /* [] */0
          }
        }
      }
    });

Belt_List.reduce(Belt_List.map({
          hd: 1,
          tl: {
            hd: 2,
            tl: {
              hd: 3,
              tl: /* [] */0
            }
          }
        }, (function (e) {
            return e + 1 | 0;
          })), 0, (function (prim, prim$1) {
        return prim + prim$1 | 0;
      }));

Belt_List.reduce(Belt_List.map({
          hd: 1,
          tl: {
            hd: 2,
            tl: {
              hd: 3,
              tl: /* [] */0
            }
          }
        }, (function (e) {
            return e + 1 | 0;
          })), 0, (function (prim, prim$1) {
        return prim + prim$1 | 0;
      }));

var list;

exports.sum = sum;
exports.reverse = reverse$1;
exports.list = list;
/*  Not a pure module */
